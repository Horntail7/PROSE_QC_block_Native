{"version": null, "code": "gASVrwoAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA9zaW5ndWxhcml0eV9pbWeUjBBzaW5ndWxhcml0eV9hcmdzlIwPdXNlX3Npbmd1bGFyaXR5lIwLZW52X21vZHVsZXOUjAxiZW5jaF9yZWNvcmSUjAVqb2JpZJSMCGlzX3NoZWxslIwPYmVuY2hfaXRlcmF0aW9ulIwPY2xlYW51cF9zY3JpcHRzlIwKc2hhZG93X2RpcpR0lF2UKE5YgQkAAAogICAgCWVjaG8gIlNlcSxSZWFkX2NvdW50LFBlcmNlbnRhZ2UiID4ge291dHB1dC5BZ2dyZWdhdGVfbm9uX3NlcXVlbnRpYWxfc3VtbWFyeX0KICAgIAllY2hvICJTZXEsUmVhZF9jb3VudCxQZXJjZW50YWdlIiA+IHtvdXRwdXQuQWdncmVnYXRlX3NlcXVlbnRpYWxfc3VtbWFyeX0KCiAgICAJdG90YWw9MAogICAgCWZvciBmIGluIHtpbnB1dC5zZXF1ZW50aWFsX3N1bW1hcnl9OyBkbwogICAgICAgICAgICBjPSQoZ3JlcCBUb3RhbCAiJGYiIHwgc2VkICJzfCx8IHxnIiB8IGF3ayAne3twcmludCAkMn19JykKICAgICAgICAgICAgdG90YWw9JChlY2hvICR0b3RhbCAkYyB8IGF3ayAne3twcmludCAkMSskMn19JykKICAgIAlkb25lCgogICAgCW5sZW49MAogICAgCWZvciBmIGluIHtpbnB1dC5ub25fc2VxdWVudGlhbF9zdW1tYXJ5fTsgZG8KICAgICAgICAgICAgYz0kKGdyZXAgUmVhZHNfbm90X21lZXRpbmdfbGVuZ3RoX2NyaXRlcmlhICIkZiIgfCBzZWQgInN8LHwgfGciIHwgYXdrICd7e3ByaW50ICQyfX0nKQogICAgICAgICAgICBubGVuPSQoZWNobyAkbmxlbiAkYyB8IGF3ayAne3twcmludCAkMSskMn19JykKICAgIAlkb25lCgogICAgCW51bm1hdGNoZWQ9MAogICAgCWZvciBmIGluIHtpbnB1dC5ub25fc2VxdWVudGlhbF9zdW1tYXJ5fTsgZG8KICAgICAgICAgICAgYz0kKGdyZXAgUmVhZHNfdW5tYXRjaGVkICIkZiIgfCBzZWQgInN8LHwgfGciIHwgYXdrICd7e3ByaW50ICQyfX0nKQogICAgICAgICAgICBudW5tYXRjaGVkPSQoZWNobyAkbnVubWF0Y2hlZCAkYyB8IGF3ayAne3twcmludCAkMSskMn19JykKICAgIAlkb25lCgogICAgCWZvciB0ZW1wIGluICQoZ3JlcCAnXj4nIHtwYXJhbXMudGVtcGxhdGVzfSB8IHNlZCAncy8+Ly8nICk7IGRvCiAgICAgICAgICAgIGNvdW50PTAKICAgICAgICAgICAgZm9yIGYgaW4ge2lucHV0Lm5vbl9zZXF1ZW50aWFsX3N1bW1hcnl9OyBkbwogICAgICAgICAgICAJYz0kKGdyZXAgIiR0ZW1wIiAiJGYiIHwgc2VkICJzfCx8IHxnIiB8IGF3ayAne3twcmludCAkMn19JykKICAgICAgICAgICAgCWNvdW50PSQoZWNobyAkY291bnQgJGMgfCBhd2sgJ3t7cHJpbnQgJDErJDJ9fScpCiAgICAgICAgICAgIGRvbmUKICAgICAgICAgICAgcHJpbnRmICIlcywlZCwlNi4yZlxuIiAiJHRlbXAiICIkY291bnQiICIkKGF3ayAtdiBhPSRjb3VudCAtdiBiPSR0b3RhbCAnQkVHSU57e3ByaW50IChhL2IpKjEwMH19JykiID4+IHtvdXRwdXQuQWdncmVnYXRlX25vbl9zZXF1ZW50aWFsX3N1bW1hcnl9CgogICAgICAgICAgICBjb3VudD0wCiAgICAgICAgICAgIGZvciBmIGluIHtpbnB1dC5zZXF1ZW50aWFsX3N1bW1hcnl9OyBkbwogICAgICAgICAgICAJYz0kKGdyZXAgIiR0ZW1wIiAiJGYiIHwgc2VkICJzfCx8IHxnIiB8IGF3ayAne3twcmludCAkMn19JykKICAgICAgICAgICAgCWNvdW50PSQoZWNobyAkY291bnQgJGMgfCBhd2sgJ3t7cHJpbnQgJDErJDJ9fScpCiAgICAgICAgICAgIGRvbmUKICAgICAgICAgICAgcHJpbnRmICIlcywlZCwlNi4yZlxuIiAiJHRlbXAiICIkY291bnQiICIkKGF3ayAtdiBhPSRjb3VudCAtdiBiPSR0b3RhbCAnQkVHSU57e3ByaW50IChhL2IpKjEwMH19JykiID4+IHtvdXRwdXQuQWdncmVnYXRlX3NlcXVlbnRpYWxfc3VtbWFyeX0KICAgICAgICBkb25lCgogICAgCXByaW50ZiAiUmVhZHNfbm90X21lZXRpbmdfbGVuZ3RoX2NyaXRlcmlhLCVkLCU2LjJmXG4iICIkbmxlbiIgIiQoYXdrIC12IGE9JG5sZW4gLXYgYj0kdG90YWwgJ0JFR0lOe3twcmludCAoYS9iKSoxMDB9fScpIiA+PiB7b3V0cHV0LkFnZ3JlZ2F0ZV9ub25fc2VxdWVudGlhbF9zdW1tYXJ5fQogICAgCXByaW50ZiAiUmVhZHNfdW5tYXRjaGVkLCVkLCU2LjJmXG4iICIkbnVubWF0Y2hlZCIgIiQoYXdrIC12IGE9JG51bm1hdGNoZWQgLXYgYj0kdG90YWwgJ0JFR0lOe3twcmludCAoYS9iKSoxMDB9fScpIiA+PiB7b3V0cHV0LkFnZ3JlZ2F0ZV9ub25fc2VxdWVudGlhbF9zdW1tYXJ5fQogICAgCXByaW50ZiAiVG90YWwsJWQsMTAwLjAwXG4iICIkdG90YWwiID4+IHtvdXRwdXQuQWdncmVnYXRlX3NlcXVlbnRpYWxfc3VtbWFyeX0KCglmb3IgZiBpbiB7aW5wdXQuYWxpZ25lZH07IGRvCiAgICAgICAgICAgIGNhdCAiJGYiID4+IHtvdXRwdXQuQWdncmVnYXRlX2FsaWduZWR9LnRlbXA7CiAgICAgICAgZG9uZQogICAgICAgIG12IHtvdXRwdXQuQWdncmVnYXRlX2FsaWduZWR9LnRlbXAge291dHB1dC5BZ2dyZWdhdGVfYWxpZ25lZH0KCglmb3IgZiBpbiB7aW5wdXQuaW5zZXJ0c307IGRvCiAgICAgICAgICAgIGNhdCAiJGYiID4+IHtvdXRwdXQuQWdncmVnYXRlX2luc2VydHN9LnRlbXA7CiAgICAgICAgZG9uZQogICAgICAgIG12IHtvdXRwdXQuQWdncmVnYXRlX2luc2VydHN9LnRlbXAge291dHB1dC5BZ2dyZWdhdGVfaW5zZXJ0c30KICAgICAgIAoKICAgCZRoD2gShpRljAVzaGVsbJSFlHSULg==", "rule": "aggregate_data_summary", "input": ["results/Chip1/barcode25/0/aligned.fastq.gz", "results/Chip1/barcode25/0/inserts.out", "results/Chip1/barcode25/0/non_sequential_summary.csv", "results/Chip1/barcode25/0/sequential_summary.csv", "results/Chip1/barcode25/1/aligned.fastq.gz", "results/Chip1/barcode25/1/inserts.out", "results/Chip1/barcode25/1/non_sequential_summary.csv", "results/Chip1/barcode25/1/sequential_summary.csv", "results/Chip1/barcode25/2/aligned.fastq.gz", "results/Chip1/barcode25/2/inserts.out", "results/Chip1/barcode25/2/non_sequential_summary.csv", "results/Chip1/barcode25/2/sequential_summary.csv", "results/Chip1/barcode25/3/aligned.fastq.gz", "results/Chip1/barcode25/3/inserts.out", "results/Chip1/barcode25/3/non_sequential_summary.csv", "results/Chip1/barcode25/3/sequential_summary.csv", "results/Chip1/barcode25/4/aligned.fastq.gz", "results/Chip1/barcode25/4/inserts.out", "results/Chip1/barcode25/4/non_sequential_summary.csv", "results/Chip1/barcode25/4/sequential_summary.csv", "results/Chip1/barcode25/5/aligned.fastq.gz", "results/Chip1/barcode25/5/inserts.out", "results/Chip1/barcode25/5/non_sequential_summary.csv", "results/Chip1/barcode25/5/sequential_summary.csv", "results/Chip1/barcode25/6/aligned.fastq.gz", "results/Chip1/barcode25/6/inserts.out", "results/Chip1/barcode25/6/non_sequential_summary.csv", "results/Chip1/barcode25/6/sequential_summary.csv", "results/Chip1/barcode25/7/aligned.fastq.gz", "results/Chip1/barcode25/7/inserts.out", "results/Chip1/barcode25/7/non_sequential_summary.csv", "results/Chip1/barcode25/7/sequential_summary.csv", "results/Chip1/barcode25/8/aligned.fastq.gz", "results/Chip1/barcode25/8/inserts.out", "results/Chip1/barcode25/8/non_sequential_summary.csv", "results/Chip1/barcode25/8/sequential_summary.csv", "results/Chip1/barcode25/9/aligned.fastq.gz", "results/Chip1/barcode25/9/inserts.out", "results/Chip1/barcode25/9/non_sequential_summary.csv", "results/Chip1/barcode25/9/sequential_summary.csv"], "log": [], "params": ["'/data/data-transfer_KCRB/2025-04-15_HT27-2025-04-11_Run1'", "'Inputs/T3_4-Rev.fasta'", "10"], "shellcmd": "\n    \techo \"Seq,Read_count,Percentage\" > AGGRE/Chip1/barcode25/non_sequential_summary.csv\n    \techo \"Seq,Read_count,Percentage\" > AGGRE/Chip1/barcode25/sequential_summary.csv\n\n    \ttotal=0\n    \tfor f in results/Chip1/barcode25/0/sequential_summary.csv results/Chip1/barcode25/1/sequential_summary.csv results/Chip1/barcode25/2/sequential_summary.csv results/Chip1/barcode25/3/sequential_summary.csv results/Chip1/barcode25/4/sequential_summary.csv results/Chip1/barcode25/5/sequential_summary.csv results/Chip1/barcode25/6/sequential_summary.csv results/Chip1/barcode25/7/sequential_summary.csv results/Chip1/barcode25/8/sequential_summary.csv results/Chip1/barcode25/9/sequential_summary.csv; do\n            c=$(grep Total \"$f\" | sed \"s|,| |g\" | awk '{print $2}')\n            total=$(echo $total $c | awk '{print $1+$2}')\n    \tdone\n\n    \tnlen=0\n    \tfor f in results/Chip1/barcode25/0/non_sequential_summary.csv results/Chip1/barcode25/1/non_sequential_summary.csv results/Chip1/barcode25/2/non_sequential_summary.csv results/Chip1/barcode25/3/non_sequential_summary.csv results/Chip1/barcode25/4/non_sequential_summary.csv results/Chip1/barcode25/5/non_sequential_summary.csv results/Chip1/barcode25/6/non_sequential_summary.csv results/Chip1/barcode25/7/non_sequential_summary.csv results/Chip1/barcode25/8/non_sequential_summary.csv results/Chip1/barcode25/9/non_sequential_summary.csv; do\n            c=$(grep Reads_not_meeting_length_criteria \"$f\" | sed \"s|,| |g\" | awk '{print $2}')\n            nlen=$(echo $nlen $c | awk '{print $1+$2}')\n    \tdone\n\n    \tnunmatched=0\n    \tfor f in results/Chip1/barcode25/0/non_sequential_summary.csv results/Chip1/barcode25/1/non_sequential_summary.csv results/Chip1/barcode25/2/non_sequential_summary.csv results/Chip1/barcode25/3/non_sequential_summary.csv results/Chip1/barcode25/4/non_sequential_summary.csv results/Chip1/barcode25/5/non_sequential_summary.csv results/Chip1/barcode25/6/non_sequential_summary.csv results/Chip1/barcode25/7/non_sequential_summary.csv results/Chip1/barcode25/8/non_sequential_summary.csv results/Chip1/barcode25/9/non_sequential_summary.csv; do\n            c=$(grep Reads_unmatched \"$f\" | sed \"s|,| |g\" | awk '{print $2}')\n            nunmatched=$(echo $nunmatched $c | awk '{print $1+$2}')\n    \tdone\n\n    \tfor temp in $(grep '^>' Inputs/T3_4-Rev.fasta | sed 's/>//' ); do\n            count=0\n            for f in results/Chip1/barcode25/0/non_sequential_summary.csv results/Chip1/barcode25/1/non_sequential_summary.csv results/Chip1/barcode25/2/non_sequential_summary.csv results/Chip1/barcode25/3/non_sequential_summary.csv results/Chip1/barcode25/4/non_sequential_summary.csv results/Chip1/barcode25/5/non_sequential_summary.csv results/Chip1/barcode25/6/non_sequential_summary.csv results/Chip1/barcode25/7/non_sequential_summary.csv results/Chip1/barcode25/8/non_sequential_summary.csv results/Chip1/barcode25/9/non_sequential_summary.csv; do\n            \tc=$(grep \"$temp\" \"$f\" | sed \"s|,| |g\" | awk '{print $2}')\n            \tcount=$(echo $count $c | awk '{print $1+$2}')\n            done\n            printf \"%s,%d,%6.2f\\n\" \"$temp\" \"$count\" \"$(awk -v a=$count -v b=$total 'BEGIN{print (a/b)*100}')\" >> AGGRE/Chip1/barcode25/non_sequential_summary.csv\n\n            count=0\n            for f in results/Chip1/barcode25/0/sequential_summary.csv results/Chip1/barcode25/1/sequential_summary.csv results/Chip1/barcode25/2/sequential_summary.csv results/Chip1/barcode25/3/sequential_summary.csv results/Chip1/barcode25/4/sequential_summary.csv results/Chip1/barcode25/5/sequential_summary.csv results/Chip1/barcode25/6/sequential_summary.csv results/Chip1/barcode25/7/sequential_summary.csv results/Chip1/barcode25/8/sequential_summary.csv results/Chip1/barcode25/9/sequential_summary.csv; do\n            \tc=$(grep \"$temp\" \"$f\" | sed \"s|,| |g\" | awk '{print $2}')\n            \tcount=$(echo $count $c | awk '{print $1+$2}')\n            done\n            printf \"%s,%d,%6.2f\\n\" \"$temp\" \"$count\" \"$(awk -v a=$count -v b=$total 'BEGIN{print (a/b)*100}')\" >> AGGRE/Chip1/barcode25/sequential_summary.csv\n        done\n\n    \tprintf \"Reads_not_meeting_length_criteria,%d,%6.2f\\n\" \"$nlen\" \"$(awk -v a=$nlen -v b=$total 'BEGIN{print (a/b)*100}')\" >> AGGRE/Chip1/barcode25/non_sequential_summary.csv\n    \tprintf \"Reads_unmatched,%d,%6.2f\\n\" \"$nunmatched\" \"$(awk -v a=$nunmatched -v b=$total 'BEGIN{print (a/b)*100}')\" >> AGGRE/Chip1/barcode25/non_sequential_summary.csv\n    \tprintf \"Total,%d,100.00\\n\" \"$total\" >> AGGRE/Chip1/barcode25/sequential_summary.csv\n\n\tfor f in results/Chip1/barcode25/0/aligned.fastq.gz results/Chip1/barcode25/1/aligned.fastq.gz results/Chip1/barcode25/2/aligned.fastq.gz results/Chip1/barcode25/3/aligned.fastq.gz results/Chip1/barcode25/4/aligned.fastq.gz results/Chip1/barcode25/5/aligned.fastq.gz results/Chip1/barcode25/6/aligned.fastq.gz results/Chip1/barcode25/7/aligned.fastq.gz results/Chip1/barcode25/8/aligned.fastq.gz results/Chip1/barcode25/9/aligned.fastq.gz; do\n            cat \"$f\" >> AGGRE/Chip1/barcode25/aligned.fastq.gz.temp;\n        done\n        mv AGGRE/Chip1/barcode25/aligned.fastq.gz.temp AGGRE/Chip1/barcode25/aligned.fastq.gz\n\n\tfor f in results/Chip1/barcode25/0/inserts.out results/Chip1/barcode25/1/inserts.out results/Chip1/barcode25/2/inserts.out results/Chip1/barcode25/3/inserts.out results/Chip1/barcode25/4/inserts.out results/Chip1/barcode25/5/inserts.out results/Chip1/barcode25/6/inserts.out results/Chip1/barcode25/7/inserts.out results/Chip1/barcode25/8/inserts.out results/Chip1/barcode25/9/inserts.out; do\n            cat \"$f\" >> AGGRE/Chip1/barcode25/inserts.out.temp;\n        done\n        mv AGGRE/Chip1/barcode25/inserts.out.temp AGGRE/Chip1/barcode25/inserts.out\n       \n\n   \t", "incomplete": false, "starttime": 1745387245.1518166, "endtime": 1745387245.8758168, "job_hash": 8661981825938309575, "conda_env": null, "singularity_img_url": null}